// This is a human-readable version of a .cfg file for Joos 1W.
// To generate the actual .cfg file, discard all blank lines and
// lines beginning with "//".

// Start symbol
S CompilationUnit EOF

// Productions
// 4.1
Type PrimitiveType
Type ReferenceType

// 4.2
PrimitiveType NumericType
PrimitiveType boolean

NumericType IntegralType

IntegralType byte
IntegralType short
IntegralType int
IntegralType char

// 4.3
//ReferenceType ClassOrInterfaceType
ReferenceType Name
ReferenceType Type [ ]

//ClassOrInterfaceType TypeName
//ClassOrInterfaceType Name

//ArrayType Type [ ]

// 6.5

//TODO: in name resolution: disambiguate the following uses of Name?
//      FooNames merged into a generic Name of dotted identifiers

Name Identifier
Name Name . Identifier

// 7.3
CompilationUnit PackageDeclaration ImportDeclarations TypeDeclarations

ImportDeclarations
ImportDeclarations ImportDeclarations ImportDeclaration

TypeDeclarations
TypeDeclarations TypeDeclarations TypeDeclaration

// 7.4
//PackageDeclaration package PackageName ;
PackageDeclaration package Name ;

// 7.5
ImportDeclaration SingleTypeImportDeclaration
ImportDeclaration TypeImportOnDemandDeclaration

//SingleTypeImportDeclaration import TypeName ;
SingleTypeImportDeclaration import Name ;

//TypeImportOnDemandDeclaration import PackageOrTypeName . * ;
TypeImportOnDemandDeclaration import Name . * ;

// 7.6
TypeDeclaration ClassDeclaration
TypeDeclaration InterfaceDeclaration
TypeDeclaration ;

// 8.1
// Joos disallows private
// Joos disallows nested types
ClassDeclaration Modifiers class Identifier ClassBody
ClassDeclaration Modifiers class Identifier Super ClassBody
ClassDeclaration Modifiers class Identifier Interfaces ClassBody
ClassDeclaration Modifiers class Identifier Super Interfaces ClassBody

// TODO in weeder: Modifiers should be:
//ClassModifier public
//ClassModifier protected
//ClassModifier abstract
//ClassModifier static
//ClassModifier final

// TODO in weeder: ClassOrInterfaceType must be a ClassType
//Super extends ClassOrInterfaceType
Super extends Name

Interfaces implements InterfaceTypeList

// TODO in weeder: All ClassOrInterfaceTypes must be InterfaceTypes
//InterfaceTypeList ClassOrInterfaceType
//InterfaceTypeList InterfaceTypeList , ClassOrInterfaceType
InterfaceTypeList Name
InterfaceTypeList InterfaceTypeList , Name

ClassBody { ClassBodyDeclarations }

ClassBodyDeclarations
ClassBodyDeclarations ClassBodyDeclarations ClassBodyDeclaration

ClassBodyDeclaration ClassMemberDeclaration
ClassBodyDeclaration ConstructorDeclaration

ClassMemberDeclaration FieldDeclaration
ClassMemberDeclaration MethodDeclaration
ClassMemberDeclaration ;

// 8.3
// Joos disallows array initializers
// Joos disallows array declaration after variable name
// Joos disallows multiple variable declarations in same statement
// Joos disallows transient fields
// Joos disallows final fields

FieldDeclaration Modifiers Type Identifier ;
FieldDeclaration Modifiers Type Identifier = Expression ;

// TODO in weeder: Check that Modifiers is one of the following: 
//FieldModifier public
//FieldModifier protected
//FieldModifier static

//VariableDeclarator Identifier
//VariableDeclarator Identifier = VariableInitializer

//VariableDeclaratorId Identifier

//VariableInitializer Expression

// 8.4
// Joos disallows array return type after method signature
// Joos disallows final formal parameters
// Joos disallows native methods
MethodDeclaration MethodHeader MethodBody

MethodHeader Modifiers Type Identifier MethodDeclarator
MethodHeader Modifiers void Identifier MethodDeclarator
// TODO in weeder: afaik there's nothing to filter for method modifiers?

//ResultType Type
//ResultType void

MethodDeclarator ( )
MethodDeclarator ( FormalParameterList )

FormalParameterList FormalParameter
FormalParameterList FormalParameterList , FormalParameter

FormalParameter Type Identifier

// GENERIC MODIFIERS REPLACE ALL SPECIALLY NAMED MODIFIERS
Modifiers
Modifiers Modifiers Modifier

Modifier public
Modifier protected
Modifier abstract
Modifier static
Modifier final

MethodBody Block 
MethodBody ;

// 8.6
// Joos disallows instance initializers

// 8.7
// Joos disallows static initializers

// 8.8
ConstructorDeclaration Modifiers ConstructorDeclarator ConstructorBody

// TODO in weeder: check that Modifiers is one of the following:
//ConstructorModifier public
//ConstructorModifier protected

// The Identifier in the next 2 productions must match the simple name of the class.
ConstructorDeclarator Identifier ( )
ConstructorDeclarator Identifier ( FormalParameterList )


// Joos disallows explicit this() and super() calls
ConstructorBody { BlockStatements }

// 9.1
InterfaceDeclaration Modifiers interface Identifier InterfaceBody
InterfaceDeclaration Modifiers interface Identifier ExtendsInterfaces InterfaceBody

// TODO in weeder: check Modifiers is one of:
//InterfaceModifier public
//InterfaceModifier protected
//InterfaceModifier abstract
//InterfaceModifier static

// TODO in weeder: All ClassOrInterfaceTypes must be InterfaceTypes
//ExtendsInterfaces extends ClassOrInterfaceType
//ExtendsInterfaces ExtendsInterfaces , ClassOrInterfaceType
ExtendsInterfaces extends Name
ExtendsInterfaces ExtendsInterfaces , Name
	
InterfaceBody { InterfaceMemberDeclarations }

InterfaceMemberDeclarations
InterfaceMemberDeclarations InterfaceMemberDeclarations InterfaceMemberDeclaration

InterfaceMemberDeclaration ConstantDeclaration
InterfaceMemberDeclaration AbstractMethodDeclaration
InterfaceMemberDeclaration ClassDeclaration 
InterfaceMemberDeclaration InterfaceDeclaration
InterfaceMemberDeclaration ;

// 9.3

ConstantDeclaration Modifiers Type Identifier
ConstantDeclaration Modifiers Type Identifier = Expression

// TODO in weeder: check that Modifiers contains only:
//ConstantModifier public
//ConstantModifier static
//ConstantModifier final
	
// 9.4
AbstractMethodDeclaration Modifiers Type Identifier MethodDeclarator ;
AbstractMethodDeclaration Modifiers void Identifier MethodDeclarator ;

// TODO in weeder: Modifiers should only contain following.
//AbstractMethodModifier public
//AbstractMethodModifier abstract
	
// 10.6
// Joos disallows array initializers

// 14.2
Block { BlockStatements }

BlockStatements
BlockStatements BlockStatements BlockStatement

BlockStatement LocalVariableDeclarationStatement
BlockStatement ClassDeclaration
BlockStatement Statement
	
// 14.4
// Joos disallows final local variables
LocalVariableDeclarationStatement LocalVariableDeclaration ;

LocalVariableDeclaration Type Identifier
	
// 14.5
// The provided language standard fixes the dangling-if problem.
Statement StatementWithoutTrailingSubstatement
Statement IfThenStatement
Statement IfThenElseStatement
Statement WhileStatement
Statement ForStatement

StatementWithoutTrailingSubstatement Block
StatementWithoutTrailingSubstatement EmptyStatement
StatementWithoutTrailingSubstatement ExpressionStatement
StatementWithoutTrailingSubstatement ReturnStatement

StatementNoShortIf StatementWithoutTrailingSubstatement
StatementNoShortIf IfThenElseStatementNoShortIf
StatementNoShortIf WhileStatementNoShortIf
StatementNoShortIf ForStatementNoShortIf
	
// 14.6
EmptyStatement ;

// 14.7
// Joos disallows labeled statements

// 14.8
// Joos disallows prefix/postfix increment/decrement
ExpressionStatement StatementExpression ;

StatementExpression Assignment
StatementExpression MethodInvocation
StatementExpression ClassInstanceCreationExpression
	
// 14.9
IfThenStatement if ( Expression ) Statement

IfThenElseStatement if ( Expression ) StatementNoShortIf else Statement

IfThenElseStatementNoShortIf if ( Expression ) StatementNoShortIf else StatementNoShortIf
	
// 14.10
// Joos disallows switch statements

// 14.11
WhileStatement while ( Expression ) Statement

WhileStatementNoShortIf while ( Expression ) StatementNoShortIf
	
// 14.12
// Joos disallows do-while loops

// 14.13
// Joos disallows statement expression lists in for-loop initializers
ForStatement for ( ; ; ) Statement
ForStatement for ( ; ; StatementExpression ) Statement
ForStatement for ( ; Expression ; ) Statement
ForStatement for ( ; Expression ; StatementExpression ) Statement
ForStatement for ( LocalVariableDeclaration ; ; ) Statement
ForStatement for ( LocalVariableDeclaration ; ; StatementExpression ) Statement
ForStatement for ( LocalVariableDeclaration ; Expression ; ) Statement
ForStatement for ( LocalVariableDeclaration ; Expression ; StatementExpression ) Statement

ForStatementNoShortIf for ( ; ; ) StatementNoShortIf
ForStatementNoShortIf for ( ; ; StatementExpression ) StatementNoShortIf
ForStatementNoShortIf for ( ; Expression ; ) StatementNoShortIf
ForStatementNoShortIf for ( ; Expression ; StatementExpression ) StatementNoShortIf
ForStatementNoShortIf for ( LocalVariableDeclaration ; ; ) StatementNoShortIf
ForStatementNoShortIf for ( LocalVariableDeclaration ; ; StatementExpression ) StatementNoShortIf
ForStatementNoShortIf for ( LocalVariableDeclaration ; Expression ; ) StatementNoShortIf
ForStatementNoShortIf for ( LocalVariableDeclaration ; Expression ; StatementExpression ) StatementNoShortIf
	
// 14.14
// Joos disallows break statements

// 14.15
// Joos disallows continue statements

// 14.16
ReturnStatement return ;
ReturnStatement return Expression ;
	
// 14.17
// Joos disallows throw statements

// 14.18
// Joos disallows synchronized statements

// 14.19
// Joos disallows try statements

// 15.8
// Joos disallows class literals
Primary PrimaryNoNewArray
Primary ArrayCreationExpression

PrimaryNoNewArray Literal
PrimaryNoNewArray this
// TODO in weeder: ClassOrInterfaceType must be a ClassType
//PrimaryNoNewArray ClassOrInterfaceType . this
PrimaryNoNewArray Name . this
PrimaryNoNewArray ( Expression )
PrimaryNoNewArray ClassInstanceCreationExpression
PrimaryNoNewArray FieldAccess
PrimaryNoNewArray MethodInvocation
PrimaryNoNewArray ArrayAccess

Literal IntegerLiteral
Literal BooleanLiteral
Literal CharacterLiteral
Literal StringLiteral
Literal NullLiteral
	
// 15.9
// Name's below must be ClassOrInterfaceType.
ClassInstanceCreationExpression new Name ( )
ClassInstanceCreationExpression new Name ( ) ClassBody
ClassInstanceCreationExpression new Name ( ArgumentList )
ClassInstanceCreationExpression new Name ( ArgumentList ) ClassBody
ClassInstanceCreationExpression Primary . new Identifier ( )
ClassInstanceCreationExpression Primary . new Identifier ( ) ClassBody
ClassInstanceCreationExpression Primary . new Identifier ( ArgumentList )
ClassInstanceCreationExpression Primary . new Identifier ( ArgumentList ) ClassBody

ArgumentList Expression
ArgumentList ArgumentList , Expression

// 15.10
// Joos disallows multi-dimensional arrays
ArrayCreationExpression new PrimitiveType DimExpr
//ArrayCreationExpression new TypeName DimExpr
ArrayCreationExpression new Name DimExpr
ArrayCreationExpression new PrimitiveType [ ] 
//ArrayCreationExpression new TypeName [ ]
ArrayCreationExpression new Name [ ]

DimExpr [ Expression ]
//Dims [ ]

// 15.11
// Joos disallows super field access
FieldAccess Primary . Identifier

// 15.12
// Joos disallows super() calls
//MethodInvocation MethodName ( )
MethodInvocation Name ( )
//MethodInvocation MethodName ( ArgumentList )
MethodInvocation Name ( ArgumentList )
MethodInvocation Primary . Identifier ( )
MethodInvocation Primary . Identifier ( ArgumentList )
	
// 15.13
//ArrayAccess ExpressionName [ Expression ]
ArrayAccess Name DimExpr
ArrayAccess PrimaryNoNewArray DimExpr

// 15.14
PostfixExpression Primary
//PostfixExpression ExpressionName
PostfixExpression Name
	
// 15.15
// Joos disallows unary plus
UnaryExpression - UnaryExpression
UnaryExpression UnaryExpressionNotPlusMinus

UnaryExpressionNotPlusMinus PostfixExpression
UnaryExpressionNotPlusMinus ~ UnaryExpression
UnaryExpressionNotPlusMinus ! UnaryExpression
UnaryExpressionNotPlusMinus CastExpression
	
// 15.16
//CastExpression ( PrimitiveType ) UnaryExpression
//CastExpression ( PrimitiveType [ ] ) UnaryExpression
//CastExpression ( ReferenceType ) UnaryExpressionNotPlusMinus
// TODO in weeder: check above form. 
CastExpression ( Type ) UnaryExpression

// 15.17
MultiplicativeExpression UnaryExpression
MultiplicativeExpression MultiplicativeExpression * UnaryExpression
MultiplicativeExpression MultiplicativeExpression / UnaryExpression
MultiplicativeExpression MultiplicativeExpression % UnaryExpression

// 15.18
AdditiveExpression MultiplicativeExpression
AdditiveExpression AdditiveExpression + MultiplicativeExpression
AdditiveExpression AdditiveExpression - MultiplicativeExpression

// 15.19
// Joos disallows bit shifts

// 15.20
RelationalExpression RelationalExpression < AdditiveExpression
RelationalExpression RelationalExpression > AdditiveExpression
RelationalExpression RelationalExpression <= AdditiveExpression
RelationalExpression RelationalExpression >= AdditiveExpression
RelationalExpression RelationalExpression instanceof ReferenceType

// 15.21
EqualityExpression RelationalExpression
EqualityExpression EqualityExpression == RelationalExpression
EqualityExpression EqualityExpression != RelationalExpression
	
// 15.22
AndExpression EqualityExpression
AndExpression AndExpression & EqualityExpression

ExclusiveOrExpression AndExpression
ExclusiveOrExpression ExclusiveOrExpression ^ AndExpression

InclusiveOrExpression ExclusiveOrExpression
InclusiveOrExpression InclusiveOrExpression | ExclusiveOrExpression
	
// 15.23
ConditionalAndExpression InclusiveOrExpression
ConditionalAndExpression ConditionalAndExpression && InclusiveOrExpression
	
// 15.24
ConditionalOrExpression ConditionalAndExpression
ConditionalOrExpression ConditionalOrExpression || ConditionalAndExpression

// 15.25
// Joos disallows the ternary operator

// 15.26
// Joos disallows compound assignment operators
AssignmentExpression ConditionalOrExpression
AssignmentExpression Assignment

Assignment LeftHandSide AssignmentOperator AssignmentExpression

//LeftHandSide ExpressionName
LeftHandSide Name
LeftHandSide FieldAccess
LeftHandSide ArrayAccess

AssignmentOperator =
	
// 15.27
Expression AssignmentExpression
	
// 15.28
ConstantExpression Expression
