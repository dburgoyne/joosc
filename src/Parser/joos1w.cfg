59
boolean
byte
short
int
char
[
]
Identifier
.
package
;
import
*
class
extends
implements
,
{
}
=
void
(
)
public
protected
abstract
static
final
interface
if
else
while
for
return
this
IntegerLiteral
BooleanLiteral
CharacterLiteral
StringLiteral
NullLiteral
new
-
~
!
/
%
+
<
>
<=
>=
instanceof
==
!=
&
^
|
&&
||
97
CompilationUnit
ImportDeclarations
TypeDeclarations
Type
ReferenceType
PrimitiveType
NumericType
IntegralType
ReferenceTypeArray
ReferenceTypeNonArray
ArrayType
PackageName
AmbiguousName
PackageDeclaration
ImportDeclaration
SingleTypeImportDeclaration
TypeImportOnDemandDeclaration
TypeDeclaration
ClassDeclaration
Super
Interfaces
InterfaceTypeList
ClassBody
ClassBodyDeclarations
ClassBodyDeclaration
ClassMemberDeclaration
FieldDeclaration
VariableDeclarator
LocalVariableDeclarator
VariableDeclaratorId
VariableInitializer
MethodDeclaration
MethodHeader
MethodDeclarator
FormalParameterList
FormalParameter
Modifiers
Modifier
MethodBody
ConstructorDeclaration
ConstructorDeclarator
ConstructorBody
InterfaceDeclaration
ExtendsInterfaces
InterfaceBody
InterfaceMemberDeclarations
InterfaceMemberDeclaration
ConstantDeclaration
AbstractMethodDeclaration
Block
BlockStatements
BlockStatement
LocalVariableDeclarationStatement
LocalVariableDeclaration
Statement
StatementWithoutTrailingSubstatement
StatementNoShortIf
EmptyStatement
ExpressionStatement
StatementExpression
IfThenStatement
IfThenElseStatement
IfThenElseStatementNoShortIf
WhileStatement
WhileStatementNoShortIf
ForStatement
ForStatementNoShortIf
ReturnStatement
Primary
PrimaryNoNewArray
Literal
ClassInstanceCreationExpression
ArgumentList
ArrayCreationExpression
DimExpr
FieldAccess
MethodInvocation
ArrayAccess
PostfixExpression
UnaryExpression
UnaryExpressionNotPlusMinus
CastExpression
MultiplicativeExpression
AdditiveExpression
RelationalExpression
EqualityExpression
AndExpression
ExclusiveOrExpression
InclusiveOrExpression
ConditionalAndExpression
ConditionalOrExpression
AssignmentExpression
Assignment
LeftHandSide
AssignmentOperator
Expression
ConstantExpression
CompilationUnit
220
CompilationUnit ImportDeclarations TypeDeclarations
CompilationUnit PackageDeclaration ImportDeclarations TypeDeclarations
ImportDeclarations
ImportDeclarations ImportDeclarations ImportDeclaration
TypeDeclarations
TypeDeclarations TypeDeclarations TypeDeclaration
Type PrimitiveType
Type ReferenceType
ReferenceType ReferenceTypeArray
ReferenceType ReferenceTypeNonArray
PrimitiveType NumericType
PrimitiveType boolean
NumericType IntegralType
IntegralType byte
IntegralType short
IntegralType int
IntegralType char
ReferenceTypeArray ArrayType
ReferenceTypeNonArray AmbiguousName
ArrayType PrimitiveType [ ]
ArrayType ReferenceTypeNonArray [ ]
PackageName Identifier
PackageName PackageName . Identifier
AmbiguousName Identifier
AmbiguousName AmbiguousName . Identifier
PackageDeclaration package PackageName ;
ImportDeclaration SingleTypeImportDeclaration
ImportDeclaration TypeImportOnDemandDeclaration
SingleTypeImportDeclaration import AmbiguousName ;
TypeImportOnDemandDeclaration import AmbiguousName . * ;
TypeDeclaration ClassDeclaration
TypeDeclaration InterfaceDeclaration
TypeDeclaration ;
ClassDeclaration Modifiers class Identifier ClassBody
ClassDeclaration Modifiers class Identifier Super ClassBody
ClassDeclaration Modifiers class Identifier Interfaces ClassBody
ClassDeclaration Modifiers class Identifier Super Interfaces ClassBody
Super extends AmbiguousName
Interfaces implements InterfaceTypeList
InterfaceTypeList AmbiguousName
InterfaceTypeList InterfaceTypeList , AmbiguousName
ClassBody { ClassBodyDeclarations }
ClassBodyDeclarations
ClassBodyDeclarations ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclaration ClassMemberDeclaration
ClassBodyDeclaration ConstructorDeclaration
ClassMemberDeclaration FieldDeclaration
ClassMemberDeclaration MethodDeclaration
ClassMemberDeclaration ;
FieldDeclaration Modifiers Type VariableDeclarator ;
VariableDeclarator VariableDeclaratorId
VariableDeclarator VariableDeclaratorId = VariableInitializer
LocalVariableDeclarator VariableDeclaratorId
VariableDeclaratorId Identifier
VariableInitializer Expression
MethodDeclaration MethodHeader MethodBody
MethodHeader Modifiers Type MethodDeclarator
MethodHeader Modifiers void MethodDeclarator
MethodDeclarator Identifier ( )
MethodDeclarator Identifier ( FormalParameterList )
FormalParameterList FormalParameter
FormalParameterList FormalParameterList , FormalParameter
FormalParameter Type VariableDeclaratorId
Modifiers
Modifiers Modifiers Modifier
Modifier public
Modifier protected
Modifier abstract
Modifier static
Modifier final
MethodBody Block
MethodBody ;
ConstructorDeclaration Modifiers ConstructorDeclarator ConstructorBody
ConstructorDeclarator Identifier ( )
ConstructorDeclarator Identifier ( FormalParameterList )
ConstructorBody { BlockStatements }
InterfaceDeclaration Modifiers interface Identifier InterfaceBody
InterfaceDeclaration Modifiers interface Identifier ExtendsInterfaces InterfaceBody
ExtendsInterfaces extends AmbiguousName
ExtendsInterfaces ExtendsInterfaces , AmbiguousName
InterfaceBody { InterfaceMemberDeclarations }
InterfaceMemberDeclarations
InterfaceMemberDeclarations InterfaceMemberDeclarations InterfaceMemberDeclaration
InterfaceMemberDeclaration ConstantDeclaration
InterfaceMemberDeclaration AbstractMethodDeclaration
InterfaceMemberDeclaration ClassDeclaration
InterfaceMemberDeclaration InterfaceDeclaration
InterfaceMemberDeclaration ;
ConstantDeclaration Modifiers Type VariableDeclarator
AbstractMethodDeclaration Modifiers Type MethodDeclarator ;
AbstractMethodDeclaration Modifiers void MethodDeclarator ;
Block { BlockStatements }
BlockStatements
BlockStatements BlockStatements BlockStatement
BlockStatement LocalVariableDeclarationStatement
BlockStatement ClassDeclaration
BlockStatement Statement
LocalVariableDeclarationStatement LocalVariableDeclaration ;
LocalVariableDeclaration Type LocalVariableDeclarator
Statement StatementWithoutTrailingSubstatement
Statement IfThenStatement
Statement IfThenElseStatement
Statement WhileStatement
Statement ForStatement
StatementWithoutTrailingSubstatement Block
StatementWithoutTrailingSubstatement EmptyStatement
StatementWithoutTrailingSubstatement ExpressionStatement
StatementWithoutTrailingSubstatement ReturnStatement
StatementNoShortIf StatementWithoutTrailingSubstatement
StatementNoShortIf IfThenElseStatementNoShortIf
StatementNoShortIf WhileStatementNoShortIf
StatementNoShortIf ForStatementNoShortIf
EmptyStatement ;
ExpressionStatement StatementExpression ;
StatementExpression Assignment
StatementExpression MethodInvocation
StatementExpression ClassInstanceCreationExpression
IfThenStatement if ( Expression ) Statement
IfThenElseStatement if ( Expression ) StatementNoShortIf else Statement
IfThenElseStatementNoShortIf if ( Expression ) StatementNoShortIf else StatementNoShortIf
WhileStatement while ( Expression ) Statement
WhileStatementNoShortIf while ( Expression ) StatementNoShortIf
ForStatement for ( ; ; ) Statement
ForStatement for ( ; ; StatementExpression ) Statement
ForStatement for ( ; Expression ; ) Statement
ForStatement for ( ; Expression ; StatementExpression ) Statement
ForStatement for ( LocalVariableDeclaration ; ; ) Statement
ForStatement for ( LocalVariableDeclaration ; ; StatementExpression ) Statement
ForStatement for ( LocalVariableDeclaration ; Expression ; ) Statement
ForStatement for ( LocalVariableDeclaration ; Expression ; StatementExpression ) Statement
ForStatementNoShortIf for ( ; ; ) StatementNoShortIf
ForStatementNoShortIf for ( ; ; StatementExpression ) StatementNoShortIf
ForStatementNoShortIf for ( ; Expression ; ) StatementNoShortIf
ForStatementNoShortIf for ( ; Expression ; StatementExpression ) StatementNoShortIf
ForStatementNoShortIf for ( LocalVariableDeclaration ; ; ) StatementNoShortIf
ForStatementNoShortIf for ( LocalVariableDeclaration ; ; StatementExpression ) StatementNoShortIf
ForStatementNoShortIf for ( LocalVariableDeclaration ; Expression ; ) StatementNoShortIf
ForStatementNoShortIf for ( LocalVariableDeclaration ; Expression ; StatementExpression ) StatementNoShortIf
ReturnStatement return ;
ReturnStatement return Expression ;
Primary PrimaryNoNewArray
Primary ArrayCreationExpression
PrimaryNoNewArray Literal
PrimaryNoNewArray this
PrimaryNoNewArray ( Expression )
PrimaryNoNewArray ClassInstanceCreationExpression
PrimaryNoNewArray FieldAccess
PrimaryNoNewArray MethodInvocation
PrimaryNoNewArray ArrayAccess
Literal IntegerLiteral
Literal BooleanLiteral
Literal CharacterLiteral
Literal StringLiteral
Literal NullLiteral
ClassInstanceCreationExpression new AmbiguousName ( )
ClassInstanceCreationExpression new AmbiguousName ( ) ClassBody
ClassInstanceCreationExpression new AmbiguousName ( ArgumentList )
ClassInstanceCreationExpression new AmbiguousName ( ArgumentList ) ClassBody
ClassInstanceCreationExpression Primary . new Identifier ( )
ClassInstanceCreationExpression Primary . new Identifier ( ) ClassBody
ClassInstanceCreationExpression Primary . new Identifier ( ArgumentList )
ClassInstanceCreationExpression Primary . new Identifier ( ArgumentList ) ClassBody
ArgumentList Expression
ArgumentList ArgumentList , Expression
ArrayCreationExpression new PrimitiveType DimExpr
ArrayCreationExpression new AmbiguousName DimExpr
ArrayCreationExpression new PrimitiveType [ ]
ArrayCreationExpression new AmbiguousName [ ]
DimExpr [ Expression ]
FieldAccess Primary . Identifier
MethodInvocation AmbiguousName ( )
MethodInvocation AmbiguousName ( ArgumentList )
MethodInvocation Primary . Identifier ( )
MethodInvocation Primary . Identifier ( ArgumentList )
ArrayAccess ReferenceTypeNonArray [ Expression ]
ArrayAccess PrimaryNoNewArray [ Expression ]
PostfixExpression Primary
PostfixExpression AmbiguousName
UnaryExpression - UnaryExpression
UnaryExpression UnaryExpressionNotPlusMinus
UnaryExpressionNotPlusMinus PostfixExpression
UnaryExpressionNotPlusMinus ~ UnaryExpression
UnaryExpressionNotPlusMinus ! UnaryExpression
UnaryExpressionNotPlusMinus CastExpression
CastExpression ( PrimitiveType ) UnaryExpression
CastExpression ( ReferenceType ) UnaryExpressionNotPlusMinus
MultiplicativeExpression UnaryExpression
MultiplicativeExpression MultiplicativeExpression * UnaryExpression
MultiplicativeExpression MultiplicativeExpression / UnaryExpression
MultiplicativeExpression MultiplicativeExpression % UnaryExpression
AdditiveExpression MultiplicativeExpression
AdditiveExpression AdditiveExpression + MultiplicativeExpression
AdditiveExpression AdditiveExpression - MultiplicativeExpression
RelationalExpression RelationalExpression < AdditiveExpression
RelationalExpression RelationalExpression > AdditiveExpression
RelationalExpression RelationalExpression <= AdditiveExpression
RelationalExpression RelationalExpression >= AdditiveExpression
RelationalExpression RelationalExpression instanceof ReferenceType
EqualityExpression RelationalExpression
EqualityExpression EqualityExpression == RelationalExpression
EqualityExpression EqualityExpression != RelationalExpression
AndExpression EqualityExpression
AndExpression AndExpression & EqualityExpression
ExclusiveOrExpression AndExpression
ExclusiveOrExpression ExclusiveOrExpression ^ AndExpression
InclusiveOrExpression ExclusiveOrExpression
InclusiveOrExpression InclusiveOrExpression | ExclusiveOrExpression
ConditionalAndExpression InclusiveOrExpression
ConditionalAndExpression ConditionalAndExpression && InclusiveOrExpression
ConditionalOrExpression ConditionalAndExpression
ConditionalOrExpression ConditionalOrExpression || ConditionalAndExpression
AssignmentExpression ConditionalOrExpression
AssignmentExpression Assignment
Assignment LeftHandSide AssignmentOperator AssignmentExpression
LeftHandSide AmbiguousName
LeftHandSide FieldAccess
LeftHandSide ArrayAccess
AssignmentOperator =
Expression AssignmentExpression
ConstantExpression Expression
